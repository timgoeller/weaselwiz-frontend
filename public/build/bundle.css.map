{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\App.svelte",
    "..\\..\\Codeview.svelte",
    "..\\..\\Taskbar.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n\timport Codeview from './components/Codeview.svelte'\r\n\timport Taskbar from './components/Taskbar.svelte'\r\n\r\n\tlet codeview\r\n\tlet currentTypecheckingData\r\n\tlet stepTracker = 0\r\n\r\n\tfunction runTypechecker() {\r\n\t\t// console.log(codeview.code)\r\n\t\tcodeview.disableCodeView()\r\n\t\tfetch('http://localhost:37105/compile' , {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tbody: codeview.code\r\n\t\t}).then(response => response.json()).then(data => {\r\n\t\t\tcurrentTypecheckingData = data\r\n\t\t\tstepTracker = 0\r\n\t\t\tcodeview.showStep(currentTypecheckingData[stepTracker])\r\n\t\t})\r\n\t}\r\n\r\n\tfunction stepBackward() {\r\n\t\tif(!stepTracker <= 0) {\r\n\t\t\tstepTracker--\r\n\t\t\tcodeview.showStep(currentTypecheckingData[stepTracker])\r\n\t\t}\r\n\t}\r\n\r\n\tfunction stepForward() {\r\n\t\tif(!(stepTracker >= (currentTypecheckingData.length - 1))) {\r\n\t\t\tstepTracker++\r\n\t\t\tcodeview.showStep(currentTypecheckingData[stepTracker])\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<main id=\"layout\">\r\n\t<div id=\"code-view\">\r\n\t\t<Codeview bind:this={codeview}>></Codeview>\r\n\t</div>\r\n\t<div id=\"taskbar\">\r\n\t\t<Taskbar \r\n\t\t\ton:runTypecheckClicked={runTypechecker} \r\n\t\t\ton:stepForwardClicked={stepForward}\r\n\t\t\ton:stepBackwardClicked={stepBackward}>\r\n\t\t</Taskbar>\r\n\t</div>\r\n\t<div id=\"environment-view\"></div>\r\n\t<div id=\"some-view\"></div>\r\n</main>\r\n\r\n<style>\r\n\t#layout {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: auto 300px;\r\n\t\tgrid-template-rows: 50vh auto 40px;\r\n\t\theight:100vh;\r\n\t}\r\n\r\n\t#code-view {\r\n\t\tgrid-column-start: 1;\r\n\t\tgrid-column-end: 2;\r\n\r\n\t\tgrid-row-start: 1;\r\n\t\tgrid-row-end: 3;\r\n\r\n\t\tborder: 2px solid black;\r\n\t\tborder-radius: 5px;\r\n\t}\r\n\r\n\t#taskbar {\r\n\t\tgrid-column-start: 1;\r\n\t\tgrid-column-end: 2;\r\n\r\n\t\tgrid-row-start: 3;\r\n\t\tgrid-row-end: 4;\r\n\t}\r\n\r\n\t#environment-view {\r\n\t\tbackground-color: blueviolet;\r\n\t}\r\n\r\n\t#some-view {\r\n\t\tbackground-color: greenyellow;\r\n\r\n\t\tgrid-row-start: 2;\r\n\t\tgrid-row-end: 4;\r\n\t}\r\n</style>",
    "<script>\r\n\texport let foo\r\n\texport let code = 'let x = 14 in 12 + x'\r\n\r\n\r\n\tlet inputDisabled = false\r\n\r\n\tlet highlights\r\n\r\n\texport function disableCodeView() {\r\n\t\tinputDisabled = true\r\n\t}\r\n\r\n\tlet currentStep\r\n\r\n\texport function showStep(step) {\r\n\t\tcurrentStep = step\r\n\t\tupdateHighlight(code)\r\n\t}\r\n\r\n\tfunction updateHighlight(code) {\r\n\t\tconsole.log(code)\r\n\t\tlet highlightedText\r\n\t\tif (currentStep) {\r\n\t\t\thighlightedText = applyHighlights(code)\r\n\t\t}\r\n\t\telse {\r\n\t\t\thighlightedText = code\r\n\t\t}\r\n\t\thighlights.innerHTML = highlightedText\r\n\t}\r\n\r\n\tfunction codeInput(code) {\r\n\t\tupdateHighlight(code.srcElement.value)\r\n\t}\r\n\r\n\tfunction applyHighlights(text) {\r\n\t\tlet split = text.split(\"\\n\"); \r\n\t\tlet startSpan = currentStep.expr.span.start\r\n\t\tlet endSpan = currentStep.expr.span.end\r\n\t\tsplit[startSpan.line] = split[startSpan.line].slice(0, startSpan.column) + '<mark>' + split[startSpan.line].slice(startSpan.column, split[startSpan.line].length)\r\n\t\tif (startSpan.line === endSpan.line && endSpan.column > startSpan.column ) {\r\n\t\t\tendSpan.column += 7\r\n\t\t}\r\n\t\tconsole.log(split[endSpan.line])\r\n\t\tsplit[endSpan.line] = split[endSpan.line].slice(0, endSpan.column) + '</mark>' + split[endSpan.line].slice(endSpan.column, split[endSpan.line].length)\r\n\t\tconsole.log(split[endSpan.line])\r\n\t\tlet highlightedString = ''\r\n\t\r\n\t\tsplit.forEach(string => {\r\n\t\t\thighlightedString += string + '\\n'\r\n\t\t});\r\n\t\treturn highlightedString\r\n\t}\r\n\r\n</script>\r\n\r\n<svelte:options accessors={true}/>\r\n\r\n<div id=\"code-container\">\r\n\t<div id=\"line-numbers\">\r\n\r\n\t</div>\r\n\t<div id=\"text-container\">\r\n\t\t<textarea on:input={codeInput} disabled={inputDisabled} bind:value={code} id='code-area'></textarea>\r\n\t\t<div id=\"backdrop\">\r\n\t\t\t<div id=\"highlights\" bind:this={highlights}></div>\r\n\t\t</div>\r\n\t</div>\r\n\t\r\n</div>\r\n\r\n<style>\r\n\ttextarea {\r\n\t\tresize: none;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tpadding: 0;\r\n\t\tborder: 0;\r\n\t\tposition: absolute;\r\n\t\tz-index: 2;\r\n\t\tbackground-color: transparent;\r\n\t}\r\n\r\n\t#code-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t#line-numbers {\r\n\t\twidth: 40px;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t#text-container {\r\n\t\tflex-grow: 1;\r\n\t\theight: 100%;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t#backdrop {\r\n\t\tposition: absolute;\r\n\t\theight: 100%;\r\n\t\twidth: 100%;\r\n\t\ttop: 0;\r\n    left: 0;\r\n\t}\r\n\r\n\t#highlights, textarea {\r\n\t\tfont: 20px/28px 'Source Code Pro', monospace;\r\n\t\tletter-spacing: 1px;\r\n\t}\r\n\r\n\t#highlights {\r\n    white-space: pre-wrap;\r\n    word-wrap: break-word;\r\n    color: transparent;\r\n\t}\r\n</style>",
    "<script>\r\n  import { createEventDispatcher } from 'svelte';\r\n  const dispatch = createEventDispatcher();\r\n</script>\r\n\r\n<div id='taskbar-container'>\r\n  <button on:click={() => dispatch('runTypecheckClicked')}>Run Typecheck</button>\r\n  <button on:click={() => dispatch('stepForwardClicked')}>Step forward</button>\r\n  <button on:click={() => dispatch('stepBackwardClicked')}>Step back</button>\r\n</div>\r\n\r\n<style>\r\n  #taskbar-container {\r\n    display: flex;\r\n    flex-direction: row-reverse;\r\n    border: 4px solid white;\r\n    box-sizing: border-box;\r\n    align-items: center;\r\n    height:100%;\r\n  }\r\n\r\n  button {\r\n    margin: 5px;\r\n  }\r\n</style>"
  ],
  "names": [],
  "mappings": "AAoDC,OAAO,eAAC,CAAC,AACR,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,IAAI,CAAC,KAAK,CACjC,kBAAkB,CAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAClC,OAAO,KAAK,AACb,CAAC,AAED,UAAU,eAAC,CAAC,AACX,iBAAiB,CAAE,CAAC,CACpB,eAAe,CAAE,CAAC,CAElB,cAAc,CAAE,CAAC,CACjB,YAAY,CAAE,CAAC,CAEf,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CACvB,aAAa,CAAE,GAAG,AACnB,CAAC,AAED,QAAQ,eAAC,CAAC,AACT,iBAAiB,CAAE,CAAC,CACpB,eAAe,CAAE,CAAC,CAElB,cAAc,CAAE,CAAC,CACjB,YAAY,CAAE,CAAC,AAChB,CAAC,AAED,iBAAiB,eAAC,CAAC,AAClB,gBAAgB,CAAE,UAAU,AAC7B,CAAC,AAED,UAAU,eAAC,CAAC,AACX,gBAAgB,CAAE,WAAW,CAE7B,cAAc,CAAE,CAAC,CACjB,YAAY,CAAE,CAAC,AAChB,CAAC;ACdD,QAAQ,eAAC,CAAC,AACT,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,CAAC,CACV,MAAM,CAAE,CAAC,CACT,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,CAAC,CACV,gBAAgB,CAAE,WAAW,AAC9B,CAAC,AAED,eAAe,eAAC,CAAC,AAChB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,CACnB,MAAM,CAAE,IAAI,AACb,CAAC,AAED,aAAa,eAAC,CAAC,AACd,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AACb,CAAC,AAED,eAAe,eAAC,CAAC,AAChB,SAAS,CAAE,CAAC,CACZ,MAAM,CAAE,IAAI,CACZ,QAAQ,CAAE,QAAQ,AACnB,CAAC,AAED,SAAS,eAAC,CAAC,AACV,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,GAAG,CAAE,CAAC,CACJ,IAAI,CAAE,CAAC,AACV,CAAC,AAED,0BAAW,CAAE,QAAQ,eAAC,CAAC,AACtB,IAAI,CAAE,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAC5C,cAAc,CAAE,GAAG,AACpB,CAAC,AAED,WAAW,eAAC,CAAC,AACV,WAAW,CAAE,QAAQ,CACrB,SAAS,CAAE,UAAU,CACrB,KAAK,CAAE,WAAW,AACrB,CAAC;AC1GA,kBAAkB,eAAC,CAAC,AAClB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,WAAW,CAC3B,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CACvB,UAAU,CAAE,UAAU,CACtB,WAAW,CAAE,MAAM,CACnB,OAAO,IAAI,AACb,CAAC,AAED,MAAM,eAAC,CAAC,AACN,MAAM,CAAE,GAAG,AACb,CAAC"
}